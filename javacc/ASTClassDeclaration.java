/* Generated By:JJTree: Do not edit this line. ASTClassDeclaration.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
import java.util.*;
import java.io.*;

public
class ASTClassDeclaration extends SimpleNode {
  public String ast_id;
  public String ast_ext;

  public HashMap<String, Symbol> symbols_table = new HashMap<String, Symbol>();

  public ASTClassDeclaration(int id) {
    super(id);
  }

  public ASTClassDeclaration(Compiler p, int id) {
    super(p, id);
  }

  @Override
  public void preProcess(String className){
    if(this.children != null) {
      for(int i = 0; i < this.children.length; i++) {
        ((SimpleNode)this.children[i]).preProcess(ast_id);
      }
    }
  }
  
  @Override
  public int process() {

    if (ast_ext != null){
      Symbol ext = getSymbolFromTable(ast_ext);
      if(ext==null || !(ext instanceof SymbolClass)) {
        throw new RuntimeException("extends ABRACO");
      }
      putSymbolInTable(new SymbolClass(ast_id, "Class", (SymbolClass)getSymbolFromTable(ast_ext)));
    } else {
      putSymbolInTable(new SymbolClass(ast_id, "Class", null));
    }    

    System.out.println(this.getClass());
    if (this.children == null) return 1;
    for(int i = 0; i < this.children.length; i++) {
      ((SimpleNode)this.children[i]).process();
    }
    return 1;
  }

}
/* JavaCC - OriginalChecksum=4add34b7f2166641d417a72fcd82c2ee (do not edit this line) */
