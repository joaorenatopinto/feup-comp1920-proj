/* Generated By:JJTree: Do not edit this line. ASTVarDeclaration.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTVarDeclaration extends SimpleNode {
  public String ast_id;
  public String ast_type;

  public ASTVarDeclaration(int id) {
    super(id);
  }

  public ASTVarDeclaration(Compiler p, int id) {
    super(p, id);
  }

  
  @Override
  public int process(String className) {
    System.out.println(ast_type);

    if(!ast_type.equals(Symbol.INT) && !ast_type.equals(Symbol.INT_ARRAY) && !ast_type.equals(Symbol.BOOLEAN) && !(getSymbolFromTable(ast_type) instanceof SymbolClass)) {
      throw new RuntimeException("No valid type for variable " + ast_id);
    } 
    
    if (!putSymbolInTable(new SymbolVar(ast_id, ast_type)))
      throw new RuntimeException("Couldn't put symbol (" + ast_id + ", " + ast_type + ") in symbols table");
    
    return 1;
  }

  public String generateCode(String className){
    
    String code = "";

    if (this.parent instanceof ASTClassDeclaration) {
      code += ".field public " + ast_id + " " + SimpleNode.getTypeJasmin(ast_type) + "\n";
    }

    /*
    i = 10; {
      bipush 10
      istore_0
    }

    i = i * 5 {
      iload_0
      iconst_5
      mul
      istore 1
    }
    */


    // if (node.children != null) {
    //     for (int i = 0; i < node.children.length; ++i) {
    //         SimpleNode n = (SimpleNode) node.children[i];
    //         if (n != null) {
    //             out += n.accept(this);
    //         }
    //     }
    // }

    return code;
  }

}
/* JavaCC - OriginalChecksum=5159ccc9095207e91ac101c5c6843086 (do not edit this line) */
