/* Generated By:JJTree: Do not edit this line. ASTNeg.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTNeg extends SimpleNode {
  public ASTNeg(int id) {
    super(id);
  }

  public ASTNeg(Compiler p, int id) {
    super(p, id);
  }

 
  
  @Override
  public int process(String className) {

    SimpleNode child = (SimpleNode)this.children[0];
    // int left_val;
    // int right_val;
    child.process(className);

    if (!child.getType().equals(Symbol.BOOLEAN)){
      throw new RuntimeException("ASTNeg is not a Boolean" + "\nLine: " + this.line + "; Col: " + this.column);
    }
    
    return 1;

    // SimpleNode child = (SimpleNode)this.children[0];
    // int child_return = child.process(className);

    // if(child_return != 0 && child_return != 1) {
    //     throw new RuntimeException("Não podes negar numeros, isso só o afonso é que pode");
    // }
    // else return child_return^1;
  }

  public String getType(){
    return Symbol.BOOLEAN;
  }

  public String generateCode(String className){
    // System.out.println("CodeGenerator " + this.getClass() + " : SIMPLENODE");
    String code = "";
    if (this.children != null)
      for(int i = 0; i < this.children.length; i++) {
        code += ((SimpleNode)this.children[i]).generateCode(className);
      }

      // XOR of the value of the children's generated code 
    code += "iconst_1\n";  
    CodeGenerator.incStack(this);
    code += "ixor\n";
    CodeGenerator.decStack(1);

    return code;
  }
}
/* JavaCC - OriginalChecksum=e2edacf504bf837f510ac7c133d6a866 (do not edit this line) */
