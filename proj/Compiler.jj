/*@bgen(jjtree) Generated By:JJTree: Do not edit this line. Compiler.jj */
/*@egen*/options
{
    LOOKAHEAD=2;
}

PARSER_BEGIN(Compiler)

import java.util.*;

public class Compiler/*@bgen(jjtree)*/implements CompilerTreeConstants/*@egen*/
{/*@bgen(jjtree)*/
  protected static JJTCompilerState jjtree = new JJTCompilerState();

/*@egen*/
    public static HashMap<String, Integer> symbol_table = new HashMap<String, Integer>();

    public static void main(String args[]) throws ParseException {
        System.out.println("Parser for Mini Java grammar");
        System.out.println("Write your shitty code:");
        Compiler comp = new Compiler(System.in);
        SimpleNode root = comp.Program(); // returns reference to root node

        root.dump(""); // prints the tree on the screen

        //System.out.println("Expression value: "+myCalc.eval(root));
    }
    /*
    int eval(SimpleNode node) {
        if(node.id == CalculatorTreeConstants.JJTNEG) {
            return -1 * eval((SimpleNode) node.jjtGetChild(0));
        }
        else if(node.jjtGetNumChildren() == 0) // leaf node with integer value
            return node.val;
        else if(node.jjtGetNumChildren() == 1) {// only one child
            return this.eval((SimpleNode) node.jjtGetChild(0));
        }

        SimpleNode lhs = (SimpleNode) node.jjtGetChild(0); //left child
        SimpleNode rhs = (SimpleNode) node.jjtGetChild(1); // right child

        switch(node.id) {
            case CalculatorTreeConstants.JJTADD : return eval( lhs ) + eval( rhs );
            case CalculatorTreeConstants.JJTSUB: return eval( lhs ) - eval( rhs );
            case CalculatorTreeConstants.JJTMUL : return eval( lhs ) * eval( rhs );
            case CalculatorTreeConstants.JJTDIV : return eval( lhs ) / eval( rhs );
            default : // abort
                System.out.println("Ilegal operator!");
                System.exit(1);
        }
        return 0;
    }*/
}



PARSER_END(Compiler)

SKIP :
{
    " " | "\r" | "\t" | "\n"
    | < "//" (~["\r", "\n"])* >
    | < "/*" > : ML_COMMENT_STATE
}

<ML_COMMENT_STATE> SKIP :
{
  < "*/" > : DEFAULT
| < ~[] >   
}

TOKEN:
{
    < INTEGER: (["0"-"9"])+ >
    | < IF: "if" >
    | < INT: "int" >
    | < NEW: "new" >
    | < VOID: "void" >
    | < ELSE: "else" >
    | < TRUE: "true" >
    | < MAIN: "main" >
    | < THIS: "this" >
    | < WHILE: "while" >
    | < FALSE: "false" >
    | < CLASS: "class" >
    | < PUBLIC: "public" >
    | < STATIC: "static" >
    | < STRING: "String" >
    | < LENGTH: "length" >
    | < RETURN: "return" >
    | < BOOLEAN: "boolean" >
    | < EXTENDS: "extends" >
    | < IMPORT: "import" >
    | < IDENTIFIER: ( (["$"]|["_"]|["A"-"Z"]|["a"-"z"])(["0"-"9"]|["A"-"Z"]|["a"-"z"]|["_"])*) >
    
}

SimpleNode Program(): {/*@bgen(jjtree) Program */
  SimpleNode jjtn000 = new SimpleNode(JJTPROGRAM);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) Program */
    try {
/*@egen*/
    Start()/*@bgen(jjtree)*/
            {
              jjtree.closeNodeScope(jjtn000, true);
              jjtc000 = false;
            }
/*@egen*/ { return jjtn000;}/*@bgen(jjtree)*/
    } catch (Throwable jjte000) {
      if (jjtc000) {
        jjtree.clearNodeScope(jjtn000);
        jjtc000 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte000 instanceof RuntimeException) {
        throw (RuntimeException)jjte000;
      }
      if (jjte000 instanceof ParseException) {
        throw (ParseException)jjte000;
      }
      throw (Error)jjte000;
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}

void Start() : {/*@bgen(jjtree) Start */
  SimpleNode jjtn000 = new SimpleNode(JJTSTART);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) Start */
    try {
/*@egen*/
    Imports() ClassDeclaration()/*@bgen(jjtree) #File( 2) */
                                 {
                                   SimpleNode jjtn001 = new SimpleNode(JJTFILE);
                                   boolean jjtc001 = true;
                                   jjtree.openNodeScope(jjtn001);
                                 }
                                 try {
/*@egen*/ <EOF>/*@bgen(jjtree)*/
                                 } finally {
                                   if (jjtc001) {
                                     jjtree.closeNodeScope(jjtn001,  2);
                                   }
                                 }
/*@egen*/         /*@bgen(jjtree)*/
    } catch (Throwable jjte000) {
      if (jjtc000) {
        jjtree.clearNodeScope(jjtn000);
        jjtc000 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte000 instanceof RuntimeException) {
        throw (RuntimeException)jjte000;
      }
      if (jjte000 instanceof ParseException) {
        throw (ParseException)jjte000;
      }
      throw (Error)jjte000;
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}

void Imports() : {/*@bgen(jjtree) Imports */
  SimpleNode jjtn000 = new SimpleNode(JJTIMPORTS);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) Imports */
    try {
/*@egen*/
    ( ImportDeclaration() )*/*@bgen(jjtree)*/
    } catch (Throwable jjte000) {
      if (jjtc000) {
        jjtree.clearNodeScope(jjtn000);
        jjtc000 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte000 instanceof RuntimeException) {
        throw (RuntimeException)jjte000;
      }
      if (jjte000 instanceof ParseException) {
        throw (ParseException)jjte000;
      }
      throw (Error)jjte000;
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}

void ImportDeclaration() : {/*@bgen(jjtree) ImportDeclaration */
  SimpleNode jjtn000 = new SimpleNode(JJTIMPORTDECLARATION);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ImportDeclaration */
    try {
/*@egen*/
    "import" ["static"] <IDENTIFIER> [ "." <IDENTIFIER> "(" [ ( Type() | "void" ) ( "," ( Type() | "void" )  )* ] ")" [ Type() | "void" ] ] ";"/*@bgen(jjtree)*/
    } catch (Throwable jjte000) {
      if (jjtc000) {
        jjtree.clearNodeScope(jjtn000);
        jjtc000 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte000 instanceof RuntimeException) {
        throw (RuntimeException)jjte000;
      }
      if (jjte000 instanceof ParseException) {
        throw (ParseException)jjte000;
      }
      throw (Error)jjte000;
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/ 
}

void ClassDeclaration() : {/*@bgen(jjtree) ClassDeclaration */
  SimpleNode jjtn000 = new SimpleNode(JJTCLASSDECLARATION);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ClassDeclaration */
    try {
/*@egen*/
    "class" <IDENTIFIER> [ "extends" <IDENTIFIER> ] "{" ( VarDeclaration() )* ( MethodDeclaration() )* "}"/*@bgen(jjtree)*/
    } catch (Throwable jjte000) {
      if (jjtc000) {
        jjtree.clearNodeScope(jjtn000);
        jjtc000 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte000 instanceof RuntimeException) {
        throw (RuntimeException)jjte000;
      }
      if (jjte000 instanceof ParseException) {
        throw (ParseException)jjte000;
      }
      throw (Error)jjte000;
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}

void VarDeclaration() : {/*@bgen(jjtree) VarDeclaration */
  SimpleNode jjtn000 = new SimpleNode(JJTVARDECLARATION);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) VarDeclaration */
    try {
/*@egen*/
    Type() <IDENTIFIER> ";"/*@bgen(jjtree)*/
    } catch (Throwable jjte000) {
      if (jjtc000) {
        jjtree.clearNodeScope(jjtn000);
        jjtc000 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte000 instanceof RuntimeException) {
        throw (RuntimeException)jjte000;
      }
      if (jjte000 instanceof ParseException) {
        throw (ParseException)jjte000;
      }
      throw (Error)jjte000;
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}

void MethodDeclaration() : {/*@bgen(jjtree) MethodDeclaration */
  SimpleNode jjtn000 = new SimpleNode(JJTMETHODDECLARATION);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) MethodDeclaration */
    try {
/*@egen*/
    "public" Type() <IDENTIFIER> "(" [ Type() <IDENTIFIER> ( "," Type() <IDENTIFIER> )* ] ")" "{" ( VarDeclaration() )* ( Statement() )* "return" Expression() ";" "}"
    | "public" "static" "void" "main" "("  "String" "[" "]" <IDENTIFIER> ")" "{" ( VarDeclaration() )* ( Statement() )* "}"/*@bgen(jjtree)*/
    } catch (Throwable jjte000) {
      if (jjtc000) {
        jjtree.clearNodeScope(jjtn000);
        jjtc000 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte000 instanceof RuntimeException) {
        throw (RuntimeException)jjte000;
      }
      if (jjte000 instanceof ParseException) {
        throw (ParseException)jjte000;
      }
      throw (Error)jjte000;
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}

void Type()      : {}
{
    "int" "[" "]"
    | "boolean"
    | "int"
    | <IDENTIFIER>
}

void Statement() : {/*@bgen(jjtree) Statement */
  SimpleNode jjtn000 = new SimpleNode(JJTSTATEMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) Statement */
    try {
/*@egen*/
    "{" ( Statement() )* "}"
    | "if" "(" Expression() ")"/*@bgen(jjtree) #If( 2) */
                                {
                                  SimpleNode jjtn001 = new SimpleNode(JJTIF);
                                  boolean jjtc001 = true;
                                  jjtree.openNodeScope(jjtn001);
                                }
                                try {
/*@egen*/ Statement()/*@bgen(jjtree)*/
                                } catch (Throwable jjte001) {
                                  if (jjtc001) {
                                    jjtree.clearNodeScope(jjtn001);
                                    jjtc001 = false;
                                  } else {
                                    jjtree.popNode();
                                  }
                                  if (jjte001 instanceof RuntimeException) {
                                    throw (RuntimeException)jjte001;
                                  }
                                  if (jjte001 instanceof ParseException) {
                                    throw (ParseException)jjte001;
                                  }
                                  throw (Error)jjte001;
                                } finally {
                                  if (jjtc001) {
                                    jjtree.closeNodeScope(jjtn001,  2);
                                  }
                                }
/*@egen*/        "else"/*@bgen(jjtree) #Else( 1) */
                                                          {
                                                            SimpleNode jjtn002 = new SimpleNode(JJTELSE);
                                                            boolean jjtc002 = true;
                                                            jjtree.openNodeScope(jjtn002);
                                                          }
                                                          try {
/*@egen*/ Statement()/*@bgen(jjtree)*/
                                                          } catch (Throwable jjte002) {
                                                            if (jjtc002) {
                                                              jjtree.clearNodeScope(jjtn002);
                                                              jjtc002 = false;
                                                            } else {
                                                              jjtree.popNode();
                                                            }
                                                            if (jjte002 instanceof RuntimeException) {
                                                              throw (RuntimeException)jjte002;
                                                            }
                                                            if (jjte002 instanceof ParseException) {
                                                              throw (ParseException)jjte002;
                                                            }
                                                            throw (Error)jjte002;
                                                          } finally {
                                                            if (jjtc002) {
                                                              jjtree.closeNodeScope(jjtn002,  1);
                                                            }
                                                          }
/*@egen*/         
    | "while" "("Expression() ")"/*@bgen(jjtree) #While( 2) */
                                  {
                                    SimpleNode jjtn003 = new SimpleNode(JJTWHILE);
                                    boolean jjtc003 = true;
                                    jjtree.openNodeScope(jjtn003);
                                  }
                                  try {
/*@egen*/ Statement()/*@bgen(jjtree)*/
                                  } catch (Throwable jjte003) {
                                    if (jjtc003) {
                                      jjtree.clearNodeScope(jjtn003);
                                      jjtc003 = false;
                                    } else {
                                      jjtree.popNode();
                                    }
                                    if (jjte003 instanceof RuntimeException) {
                                      throw (RuntimeException)jjte003;
                                    }
                                    if (jjte003 instanceof ParseException) {
                                      throw (ParseException)jjte003;
                                    }
                                    throw (Error)jjte003;
                                  } finally {
                                    if (jjtc003) {
                                      jjtree.closeNodeScope(jjtn003,  2);
                                    }
                                  }
/*@egen*/          
    | <IDENTIFIER> "[" Expression()/*@bgen(jjtree) #Identifier( 1) */
                                    {
                                      SimpleNode jjtn004 = new SimpleNode(JJTIDENTIFIER);
                                      boolean jjtc004 = true;
                                      jjtree.openNodeScope(jjtn004);
                                    }
                                    try {
/*@egen*/ "]"/*@bgen(jjtree)*/
                                    } finally {
                                      if (jjtc004) {
                                        jjtree.closeNodeScope(jjtn004,  1);
                                      }
                                    }
/*@egen*/                "=" Expression()/*@bgen(jjtree) #Assign( 2) */
                                                                        {
                                                                          SimpleNode jjtn005 = new SimpleNode(JJTASSIGN);
                                                                          boolean jjtc005 = true;
                                                                          jjtree.openNodeScope(jjtn005);
                                                                        }
                                                                        try {
/*@egen*/ ";"/*@bgen(jjtree)*/
                                                                        } finally {
                                                                          if (jjtc005) {
                                                                            jjtree.closeNodeScope(jjtn005,  2);
                                                                          }
                                                                        }
/*@egen*/           
    |/*@bgen(jjtree) Identifier */
      {
        SimpleNode jjtn006 = new SimpleNode(JJTIDENTIFIER);
        boolean jjtc006 = true;
        jjtree.openNodeScope(jjtn006);
      }
      try {
/*@egen*/ <IDENTIFIER>/*@bgen(jjtree)*/
      } finally {
        if (jjtc006) {
          jjtree.closeNodeScope(jjtn006, true);
        }
      }
/*@egen*/             "=" Expression()/*@bgen(jjtree) #Assign( 2) */
                                                {
                                                  SimpleNode jjtn007 = new SimpleNode(JJTASSIGN);
                                                  boolean jjtc007 = true;
                                                  jjtree.openNodeScope(jjtn007);
                                                }
                                                try {
/*@egen*/ ";"/*@bgen(jjtree)*/
                                                } finally {
                                                  if (jjtc007) {
                                                    jjtree.closeNodeScope(jjtn007,  2);
                                                  }
                                                }
/*@egen*/           
    | Expression() ";"/*@bgen(jjtree)*/
    } catch (Throwable jjte000) {
      if (jjtc000) {
        jjtree.clearNodeScope(jjtn000);
        jjtc000 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte000 instanceof RuntimeException) {
        throw (RuntimeException)jjte000;
      }
      if (jjte000 instanceof ParseException) {
        throw (ParseException)jjte000;
      }
      throw (Error)jjte000;
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/  
}

void Expression()       : {}
{/*@bgen(jjtree) Int */
    {
      SimpleNode jjtn001 = new SimpleNode(JJTINT);
      boolean jjtc001 = true;
      jjtree.openNodeScope(jjtn001);
    }
    try {
/*@egen*/
    <INTEGER>/*@bgen(jjtree)*/
    } finally {
      if (jjtc001) {
        jjtree.closeNodeScope(jjtn001, true);
      }
    }
/*@egen*/      [/*@bgen(jjtree) #GroupCondition( 2) */
                    {
                      SimpleNode jjtn002 = new SimpleNode(JJTGROUPCONDITION);
                      boolean jjtc002 = true;
                      jjtree.openNodeScope(jjtn002);
                    }
                    try {
/*@egen*/Express()/*@bgen(jjtree)*/
                    } catch (Throwable jjte002) {
                      if (jjtc002) {
                        jjtree.clearNodeScope(jjtn002);
                        jjtc002 = false;
                      } else {
                        jjtree.popNode();
                      }
                      if (jjte002 instanceof RuntimeException) {
                        throw (RuntimeException)jjte002;
                      }
                      if (jjte002 instanceof ParseException) {
                        throw (ParseException)jjte002;
                      }
                      throw (Error)jjte002;
                    } finally {
                      if (jjtc002) {
                        jjtree.closeNodeScope(jjtn002,  2);
                      }
                    }
/*@egen*/                   ]
    |/*@bgen(jjtree) True */
      {
        SimpleNode jjtn003 = new SimpleNode(JJTTRUE);
        boolean jjtc003 = true;
        jjtree.openNodeScope(jjtn003);
      }
      try {
/*@egen*/ "true"/*@bgen(jjtree)*/
      } finally {
        if (jjtc003) {
          jjtree.closeNodeScope(jjtn003, true);
        }
      }
/*@egen*/       [/*@bgen(jjtree) #GroupCondition( 2) */
                    {
                      SimpleNode jjtn004 = new SimpleNode(JJTGROUPCONDITION);
                      boolean jjtc004 = true;
                      jjtree.openNodeScope(jjtn004);
                    }
                    try {
/*@egen*/Express()/*@bgen(jjtree)*/
                    } catch (Throwable jjte004) {
                      if (jjtc004) {
                        jjtree.clearNodeScope(jjtn004);
                        jjtc004 = false;
                      } else {
                        jjtree.popNode();
                      }
                      if (jjte004 instanceof RuntimeException) {
                        throw (RuntimeException)jjte004;
                      }
                      if (jjte004 instanceof ParseException) {
                        throw (ParseException)jjte004;
                      }
                      throw (Error)jjte004;
                    } finally {
                      if (jjtc004) {
                        jjtree.closeNodeScope(jjtn004,  2);
                      }
                    }
/*@egen*/                   ]
    |/*@bgen(jjtree) False */
      {
        SimpleNode jjtn005 = new SimpleNode(JJTFALSE);
        boolean jjtc005 = true;
        jjtree.openNodeScope(jjtn005);
      }
      try {
/*@egen*/ "false"/*@bgen(jjtree)*/
      } finally {
        if (jjtc005) {
          jjtree.closeNodeScope(jjtn005, true);
        }
      }
/*@egen*/        [/*@bgen(jjtree) #GroupCondition( 2) */
                      {
                        SimpleNode jjtn006 = new SimpleNode(JJTGROUPCONDITION);
                        boolean jjtc006 = true;
                        jjtree.openNodeScope(jjtn006);
                      }
                      try {
/*@egen*/Express()/*@bgen(jjtree)*/
                      } catch (Throwable jjte006) {
                        if (jjtc006) {
                          jjtree.clearNodeScope(jjtn006);
                          jjtc006 = false;
                        } else {
                          jjtree.popNode();
                        }
                        if (jjte006 instanceof RuntimeException) {
                          throw (RuntimeException)jjte006;
                        }
                        if (jjte006 instanceof ParseException) {
                          throw (ParseException)jjte006;
                        }
                        throw (Error)jjte006;
                      } finally {
                        if (jjtc006) {
                          jjtree.closeNodeScope(jjtn006,  2);
                        }
                      }
/*@egen*/                   ]
    |/*@bgen(jjtree) Identifier */
      {
        SimpleNode jjtn007 = new SimpleNode(JJTIDENTIFIER);
        boolean jjtc007 = true;
        jjtree.openNodeScope(jjtn007);
      }
      try {
/*@egen*/ <IDENTIFIER>/*@bgen(jjtree)*/
      } finally {
        if (jjtc007) {
          jjtree.closeNodeScope(jjtn007, true);
        }
      }
/*@egen*/             [/*@bgen(jjtree) #GroupCondition( 2) */
                                {
                                  SimpleNode jjtn008 = new SimpleNode(JJTGROUPCONDITION);
                                  boolean jjtc008 = true;
                                  jjtree.openNodeScope(jjtn008);
                                }
                                try {
/*@egen*/Express()/*@bgen(jjtree)*/
                                } catch (Throwable jjte008) {
                                  if (jjtc008) {
                                    jjtree.clearNodeScope(jjtn008);
                                    jjtc008 = false;
                                  } else {
                                    jjtree.popNode();
                                  }
                                  if (jjte008 instanceof RuntimeException) {
                                    throw (RuntimeException)jjte008;
                                  }
                                  if (jjte008 instanceof ParseException) {
                                    throw (ParseException)jjte008;
                                  }
                                  throw (Error)jjte008;
                                } finally {
                                  if (jjtc008) {
                                    jjtree.closeNodeScope(jjtn008,  2);
                                  }
                                }
/*@egen*/                   ]
    |/*@bgen(jjtree) This */
      {
        SimpleNode jjtn009 = new SimpleNode(JJTTHIS);
        boolean jjtc009 = true;
        jjtree.openNodeScope(jjtn009);
      }
      try {
/*@egen*/ "this"/*@bgen(jjtree)*/
      } finally {
        if (jjtc009) {
          jjtree.closeNodeScope(jjtn009, true);
        }
      }
/*@egen*/       [/*@bgen(jjtree) #GroupCondition( 2) */
                    {
                      SimpleNode jjtn010 = new SimpleNode(JJTGROUPCONDITION);
                      boolean jjtc010 = true;
                      jjtree.openNodeScope(jjtn010);
                    }
                    try {
/*@egen*/Express()/*@bgen(jjtree)*/
                    } catch (Throwable jjte010) {
                      if (jjtc010) {
                        jjtree.clearNodeScope(jjtn010);
                        jjtc010 = false;
                      } else {
                        jjtree.popNode();
                      }
                      if (jjte010 instanceof RuntimeException) {
                        throw (RuntimeException)jjte010;
                      }
                      if (jjte010 instanceof ParseException) {
                        throw (ParseException)jjte010;
                      }
                      throw (Error)jjte010;
                    } finally {
                      if (jjtc010) {
                        jjtree.closeNodeScope(jjtn010,  2);
                      }
                    }
/*@egen*/                   ]
    | "new" "int" "[" Expression()/*@bgen(jjtree) #Array( 1) */
                                   {
                                     SimpleNode jjtn011 = new SimpleNode(JJTARRAY);
                                     boolean jjtc011 = true;
                                     jjtree.openNodeScope(jjtn011);
                                   }
                                   try {
/*@egen*/ "]"/*@bgen(jjtree)*/
                                   } finally {
                                     if (jjtc011) {
                                       jjtree.closeNodeScope(jjtn011,  1);
                                     }
                                   }
/*@egen*/           [/*@bgen(jjtree) #GroupCondition( 2) */
                                                  {
                                                    SimpleNode jjtn012 = new SimpleNode(JJTGROUPCONDITION);
                                                    boolean jjtc012 = true;
                                                    jjtree.openNodeScope(jjtn012);
                                                  }
                                                  try {
/*@egen*/Express()/*@bgen(jjtree)*/
                                                  } catch (Throwable jjte012) {
                                                    if (jjtc012) {
                                                      jjtree.clearNodeScope(jjtn012);
                                                      jjtc012 = false;
                                                    } else {
                                                      jjtree.popNode();
                                                    }
                                                    if (jjte012 instanceof RuntimeException) {
                                                      throw (RuntimeException)jjte012;
                                                    }
                                                    if (jjte012 instanceof ParseException) {
                                                      throw (ParseException)jjte012;
                                                    }
                                                    throw (Error)jjte012;
                                                  } finally {
                                                    if (jjtc012) {
                                                      jjtree.closeNodeScope(jjtn012,  2);
                                                    }
                                                  }
/*@egen*/                   ]
    | "new" <IDENTIFIER> "("/*@bgen(jjtree) Object */
                             {
                               SimpleNode jjtn013 = new SimpleNode(JJTOBJECT);
                               boolean jjtc013 = true;
                               jjtree.openNodeScope(jjtn013);
                             }
                             try {
/*@egen*/ ")"/*@bgen(jjtree)*/
                             } finally {
                               if (jjtc013) {
                                 jjtree.closeNodeScope(jjtn013, true);
                               }
                             }
/*@egen*/         [/*@bgen(jjtree) #GroupCondition( 2) */
                                          {
                                            SimpleNode jjtn014 = new SimpleNode(JJTGROUPCONDITION);
                                            boolean jjtc014 = true;
                                            jjtree.openNodeScope(jjtn014);
                                          }
                                          try {
/*@egen*/Express()/*@bgen(jjtree)*/
                                          } catch (Throwable jjte014) {
                                            if (jjtc014) {
                                              jjtree.clearNodeScope(jjtn014);
                                              jjtc014 = false;
                                            } else {
                                              jjtree.popNode();
                                            }
                                            if (jjte014 instanceof RuntimeException) {
                                              throw (RuntimeException)jjte014;
                                            }
                                            if (jjte014 instanceof ParseException) {
                                              throw (ParseException)jjte014;
                                            }
                                            throw (Error)jjte014;
                                          } finally {
                                            if (jjtc014) {
                                              jjtree.closeNodeScope(jjtn014,  2);
                                            }
                                          }
/*@egen*/                   ]
    | "!"/*@bgen(jjtree) #Neg( 1) */
          {
            SimpleNode jjtn015 = new SimpleNode(JJTNEG);
            boolean jjtc015 = true;
            jjtree.openNodeScope(jjtn015);
          }
          try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
          } catch (Throwable jjte015) {
            if (jjtc015) {
              jjtree.clearNodeScope(jjtn015);
              jjtc015 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte015 instanceof RuntimeException) {
              throw (RuntimeException)jjte015;
            }
            if (jjte015 instanceof ParseException) {
              throw (ParseException)jjte015;
            }
            throw (Error)jjte015;
          } finally {
            if (jjtc015) {
              jjtree.closeNodeScope(jjtn015,  1);
            }
          }
/*@egen*/         [/*@bgen(jjtree) #GroupCondition( 2) */
                                {
                                  SimpleNode jjtn016 = new SimpleNode(JJTGROUPCONDITION);
                                  boolean jjtc016 = true;
                                  jjtree.openNodeScope(jjtn016);
                                }
                                try {
/*@egen*/Express()/*@bgen(jjtree)*/
                                } catch (Throwable jjte016) {
                                  if (jjtc016) {
                                    jjtree.clearNodeScope(jjtn016);
                                    jjtc016 = false;
                                  } else {
                                    jjtree.popNode();
                                  }
                                  if (jjte016 instanceof RuntimeException) {
                                    throw (RuntimeException)jjte016;
                                  }
                                  if (jjte016 instanceof ParseException) {
                                    throw (ParseException)jjte016;
                                  }
                                  throw (Error)jjte016;
                                } finally {
                                  if (jjtc016) {
                                    jjtree.closeNodeScope(jjtn016,  2);
                                  }
                                }
/*@egen*/                   ]
    | "(" Expression()/*@bgen(jjtree) #Group( 1) */
                       {
                         SimpleNode jjtn017 = new SimpleNode(JJTGROUP);
                         boolean jjtc017 = true;
                         jjtree.openNodeScope(jjtn017);
                       }
                       try {
/*@egen*/ ")"/*@bgen(jjtree)*/
                       } finally {
                         if (jjtc017) {
                           jjtree.closeNodeScope(jjtn017,  1);
                         }
                       }
/*@egen*/           [/*@bgen(jjtree) #GroupCondition( 2) */
                                      {
                                        SimpleNode jjtn018 = new SimpleNode(JJTGROUPCONDITION);
                                        boolean jjtc018 = true;
                                        jjtree.openNodeScope(jjtn018);
                                      }
                                      try {
/*@egen*/Express()/*@bgen(jjtree)*/
                                      } catch (Throwable jjte018) {
                                        if (jjtc018) {
                                          jjtree.clearNodeScope(jjtn018);
                                          jjtc018 = false;
                                        } else {
                                          jjtree.popNode();
                                        }
                                        if (jjte018 instanceof RuntimeException) {
                                          throw (RuntimeException)jjte018;
                                        }
                                        if (jjte018 instanceof ParseException) {
                                          throw (ParseException)jjte018;
                                        }
                                        throw (Error)jjte018;
                                      } finally {
                                        if (jjtc018) {
                                          jjtree.closeNodeScope(jjtn018,  2);
                                        }
                                      }
/*@egen*/                   ]
}

void Express()       : {}
{
    ( "&&"/*@bgen(jjtree) #And( 1) */
           {
             SimpleNode jjtn001 = new SimpleNode(JJTAND);
             boolean jjtc001 = true;
             jjtree.openNodeScope(jjtn001);
           }
           try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
           } catch (Throwable jjte001) {
             if (jjtc001) {
               jjtree.clearNodeScope(jjtn001);
               jjtc001 = false;
             } else {
               jjtree.popNode();
             }
             if (jjte001 instanceof RuntimeException) {
               throw (RuntimeException)jjte001;
             }
             if (jjte001 instanceof ParseException) {
               throw (ParseException)jjte001;
             }
             throw (Error)jjte001;
           } finally {
             if (jjtc001) {
               jjtree.closeNodeScope(jjtn001,  1);
             }
           }
/*@egen*/         | "<"/*@bgen(jjtree) #Less( 1) */
                                      {
                                        SimpleNode jjtn002 = new SimpleNode(JJTLESS);
                                        boolean jjtc002 = true;
                                        jjtree.openNodeScope(jjtn002);
                                      }
                                      try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
                                      } catch (Throwable jjte002) {
                                        if (jjtc002) {
                                          jjtree.clearNodeScope(jjtn002);
                                          jjtc002 = false;
                                        } else {
                                          jjtree.popNode();
                                        }
                                        if (jjte002 instanceof RuntimeException) {
                                          throw (RuntimeException)jjte002;
                                        }
                                        if (jjte002 instanceof ParseException) {
                                          throw (ParseException)jjte002;
                                        }
                                        throw (Error)jjte002;
                                      } finally {
                                        if (jjtc002) {
                                          jjtree.closeNodeScope(jjtn002,  1);
                                        }
                                      }
/*@egen*/          | "+"/*@bgen(jjtree) #Plus( 1) */
                                                                  {
                                                                    SimpleNode jjtn003 = new SimpleNode(JJTPLUS);
                                                                    boolean jjtc003 = true;
                                                                    jjtree.openNodeScope(jjtn003);
                                                                  }
                                                                  try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
                                                                  } catch (Throwable jjte003) {
                                                                    if (jjtc003) {
                                                                      jjtree.clearNodeScope(jjtn003);
                                                                      jjtc003 = false;
                                                                    } else {
                                                                      jjtree.popNode();
                                                                    }
                                                                    if (jjte003 instanceof RuntimeException) {
                                                                      throw (RuntimeException)jjte003;
                                                                    }
                                                                    if (jjte003 instanceof ParseException) {
                                                                      throw (ParseException)jjte003;
                                                                    }
                                                                    throw (Error)jjte003;
                                                                  } finally {
                                                                    if (jjtc003) {
                                                                      jjtree.closeNodeScope(jjtn003,  1);
                                                                    }
                                                                  }
/*@egen*/          | "-"/*@bgen(jjtree) #Minus( 1) */
                                                                                              {
                                                                                                SimpleNode jjtn004 = new SimpleNode(JJTMINUS);
                                                                                                boolean jjtc004 = true;
                                                                                                jjtree.openNodeScope(jjtn004);
                                                                                              }
                                                                                              try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
                                                                                              } catch (Throwable jjte004) {
                                                                                                if (jjtc004) {
                                                                                                  jjtree.clearNodeScope(jjtn004);
                                                                                                  jjtc004 = false;
                                                                                                } else {
                                                                                                  jjtree.popNode();
                                                                                                }
                                                                                                if (jjte004 instanceof RuntimeException) {
                                                                                                  throw (RuntimeException)jjte004;
                                                                                                }
                                                                                                if (jjte004 instanceof ParseException) {
                                                                                                  throw (ParseException)jjte004;
                                                                                                }
                                                                                                throw (Error)jjte004;
                                                                                              } finally {
                                                                                                if (jjtc004) {
                                                                                                  jjtree.closeNodeScope(jjtn004,  1);
                                                                                                }
                                                                                              }
/*@egen*/            | "*"/*@bgen(jjtree) #Mult( 1) */
                                                                                                                            {
                                                                                                                              SimpleNode jjtn005 = new SimpleNode(JJTMULT);
                                                                                                                              boolean jjtc005 = true;
                                                                                                                              jjtree.openNodeScope(jjtn005);
                                                                                                                            }
                                                                                                                            try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
                                                                                                                            } catch (Throwable jjte005) {
                                                                                                                              if (jjtc005) {
                                                                                                                                jjtree.clearNodeScope(jjtn005);
                                                                                                                                jjtc005 = false;
                                                                                                                              } else {
                                                                                                                                jjtree.popNode();
                                                                                                                              }
                                                                                                                              if (jjte005 instanceof RuntimeException) {
                                                                                                                                throw (RuntimeException)jjte005;
                                                                                                                              }
                                                                                                                              if (jjte005 instanceof ParseException) {
                                                                                                                                throw (ParseException)jjte005;
                                                                                                                              }
                                                                                                                              throw (Error)jjte005;
                                                                                                                            } finally {
                                                                                                                              if (jjtc005) {
                                                                                                                                jjtree.closeNodeScope(jjtn005,  1);
                                                                                                                              }
                                                                                                                            }
/*@egen*/          | "/"/*@bgen(jjtree) #Div( 1) */
                                                                                                                                                        {
                                                                                                                                                          SimpleNode jjtn006 = new SimpleNode(JJTDIV);
                                                                                                                                                          boolean jjtc006 = true;
                                                                                                                                                          jjtree.openNodeScope(jjtn006);
                                                                                                                                                        }
                                                                                                                                                        try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
                                                                                                                                                        } catch (Throwable jjte006) {
                                                                                                                                                          if (jjtc006) {
                                                                                                                                                            jjtree.clearNodeScope(jjtn006);
                                                                                                                                                            jjtc006 = false;
                                                                                                                                                          } else {
                                                                                                                                                            jjtree.popNode();
                                                                                                                                                          }
                                                                                                                                                          if (jjte006 instanceof RuntimeException) {
                                                                                                                                                            throw (RuntimeException)jjte006;
                                                                                                                                                          }
                                                                                                                                                          if (jjte006 instanceof ParseException) {
                                                                                                                                                            throw (ParseException)jjte006;
                                                                                                                                                          }
                                                                                                                                                          throw (Error)jjte006;
                                                                                                                                                        } finally {
                                                                                                                                                          if (jjtc006) {
                                                                                                                                                            jjtree.closeNodeScope(jjtn006,  1);
                                                                                                                                                          }
                                                                                                                                                        }
/*@egen*/         ) [Express()]
    | "[" Expression()/*@bgen(jjtree) #AcessArray( 1) */
                       {
                         SimpleNode jjtn007 = new SimpleNode(JJTACESSARRAY);
                         boolean jjtc007 = true;
                         jjtree.openNodeScope(jjtn007);
                       }
                       try {
/*@egen*/ "]"/*@bgen(jjtree)*/
                       } finally {
                         if (jjtc007) {
                           jjtree.closeNodeScope(jjtn007,  1);
                         }
                       }
/*@egen*/                [/*@bgen(jjtree) #GroupCondition( 2) */
                                           {
                                             SimpleNode jjtn008 = new SimpleNode(JJTGROUPCONDITION);
                                             boolean jjtc008 = true;
                                             jjtree.openNodeScope(jjtn008);
                                           }
                                           try {
/*@egen*/Express()/*@bgen(jjtree)*/
                                           } catch (Throwable jjte008) {
                                             if (jjtc008) {
                                               jjtree.clearNodeScope(jjtn008);
                                               jjtc008 = false;
                                             } else {
                                               jjtree.popNode();
                                             }
                                             if (jjte008 instanceof RuntimeException) {
                                               throw (RuntimeException)jjte008;
                                             }
                                             if (jjte008 instanceof ParseException) {
                                               throw (ParseException)jjte008;
                                             }
                                             throw (Error)jjte008;
                                           } finally {
                                             if (jjtc008) {
                                               jjtree.closeNodeScope(jjtn008,  2);
                                             }
                                           }
/*@egen*/                   ]
    | "."/*@bgen(jjtree) Length */
          {
            SimpleNode jjtn009 = new SimpleNode(JJTLENGTH);
            boolean jjtc009 = true;
            jjtree.openNodeScope(jjtn009);
          }
          try {
/*@egen*/ "length"/*@bgen(jjtree)*/
          } finally {
            if (jjtc009) {
              jjtree.closeNodeScope(jjtn009, true);
            }
          }
/*@egen*/         [/*@bgen(jjtree) #GroupCondition( 2) */
                            {
                              SimpleNode jjtn010 = new SimpleNode(JJTGROUPCONDITION);
                              boolean jjtc010 = true;
                              jjtree.openNodeScope(jjtn010);
                            }
                            try {
/*@egen*/Express()/*@bgen(jjtree)*/
                            } catch (Throwable jjte010) {
                              if (jjtc010) {
                                jjtree.clearNodeScope(jjtn010);
                                jjtc010 = false;
                              } else {
                                jjtree.popNode();
                              }
                              if (jjte010 instanceof RuntimeException) {
                                throw (RuntimeException)jjte010;
                              }
                              if (jjte010 instanceof ParseException) {
                                throw (ParseException)jjte010;
                              }
                              throw (Error)jjte010;
                            } finally {
                              if (jjtc010) {
                                jjtree.closeNodeScope(jjtn010,  2);
                              }
                            }
/*@egen*/                   ]
    | "." <IDENTIFIER> "(" [ Arguments() ]/*@bgen(jjtree) #AcessMethod(true) */
                                           {
                                             SimpleNode jjtn011 = new SimpleNode(JJTACESSMETHOD);
                                             boolean jjtc011 = true;
                                             jjtree.openNodeScope(jjtn011);
                                           }
                                           try {
/*@egen*/ ")"/*@bgen(jjtree)*/
                                           } finally {
                                             if (jjtc011) {
                                               jjtree.closeNodeScope(jjtn011, true);
                                             }
                                           }
/*@egen*/                [/*@bgen(jjtree) #GroupCondition( 2) */
                                                               {
                                                                 SimpleNode jjtn012 = new SimpleNode(JJTGROUPCONDITION);
                                                                 boolean jjtc012 = true;
                                                                 jjtree.openNodeScope(jjtn012);
                                                               }
                                                               try {
/*@egen*/Express()/*@bgen(jjtree)*/
                                                               } catch (Throwable jjte012) {
                                                                 if (jjtc012) {
                                                                   jjtree.clearNodeScope(jjtn012);
                                                                   jjtc012 = false;
                                                                 } else {
                                                                   jjtree.popNode();
                                                                 }
                                                                 if (jjte012 instanceof RuntimeException) {
                                                                   throw (RuntimeException)jjte012;
                                                                 }
                                                                 if (jjte012 instanceof ParseException) {
                                                                   throw (ParseException)jjte012;
                                                                 }
                                                                 throw (Error)jjte012;
                                                               } finally {
                                                                 if (jjtc012) {
                                                                   jjtree.closeNodeScope(jjtn012,  2);
                                                                 }
                                                               }
/*@egen*/                   ]
}

void Arguments() : {/*@bgen(jjtree) Arguments */
  SimpleNode jjtn000 = new SimpleNode(JJTARGUMENTS);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) Arguments */
    try {
/*@egen*/
    Expression() ("," Expression())*/*@bgen(jjtree)*/
    } catch (Throwable jjte000) {
      if (jjtc000) {
        jjtree.clearNodeScope(jjtn000);
        jjtc000 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte000 instanceof RuntimeException) {
        throw (RuntimeException)jjte000;
      }
      if (jjte000 instanceof ParseException) {
        throw (ParseException)jjte000;
      }
      throw (Error)jjte000;
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}